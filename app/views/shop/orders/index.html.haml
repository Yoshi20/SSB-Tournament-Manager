- set_meta_tags description: meta_tag_description('Orders')
.row
  .col
    %h1.page__title= t('shop_orders.title')

= render 'shop/beta_header' #blup: beta

.row
  .col.middle-align
    %p= t('shop_orders.total_count') + " = #{@shop_orders.count}"

- if @shop_orders.any?
  .shopping_order-list{data: { controller: "tables copy" }, style: 'overflow: auto;'}
    %table.table.table-hover.border
      %thead.table-header
        %tr
          %th.text-center= t('activerecord.attributes.shopping_cart.created_at')
          %th.text-left= t('shop_products.title')
          %th.text-center= t('shopping_cart.total')
          -# %th.m.l.text-left= t('activerecord.attributes.shop_order.address')
          - if current_user.super_admin?
            %th.m.l.text-center{style: 'color: blueviolet;'}= t('activerecord.attributes.shop_order.email')
            %th.text-center{style: 'color: blueviolet;'}= t('activerecord.attributes.shopping_cart.user_id')
            %th.m.l.text-center{style: 'color: blueviolet;'}= t('activerecord.attributes.shopping_cart.client_ip')
            %th.text-center{style: 'color: blueviolet;'}= t('activerecord.attributes.shop_order.was_order_paid')
            -# %th.text-center{style: 'color: blueviolet;'}= t('activerecord.attributes.shop_order.was_order_sent')
            -# %th.text-center{style: 'color: blueviolet;'}= 'payment'#t('activerecord.attributes.shop_order.payment_method')
          %th.text-center= t('activerecord.attributes.shop_order.status')
          - if current_user.super_admin?
            %th.m.l.text-right{style: 'color: blueviolet;'}= t('actions')
      %tbody.table-content.with-show.shopping_order-list-body#shop_orders
        - turnover = 0
        - @shop_orders.each do |shop_order|
          - shopping_cart = shop_order.shopping_cart
          %tr{data: { id: shop_order.id, component: 'shop/order', action: "click->tables#edit" }, style: "cursor: context-menu; background-color: #{shop_order.recently_updated? ? 'aliceblue' : ''}; color: #{shop_order.recently_updated? ? 'black' : ''};"}
            %td.text-center= shop_order.created_at.localtime.to_fs(:custom_datetime)
            %td.text-left{style: 'overflow: hidden;'}
              - shopping_cart.shop_purchases.each do |purchase|
                = "#{purchase.quantity}x #{purchase.shop_product.name}"
                %br
            %td.text-center
              - total_price = shopping_cart.total_price
              = shopping_cart.total_price_text(total_price)
              - turnover = turnover + total_price
            -# %td.m.l.text-left{style: 'line-height: 1; overflow: hidden;', class: current_user.super_admin? ? 'link' : ''}
            -#   - if current_user.super_admin?
            -#     = link_to 'javascript:;', data: { action: "click->copy#innerHTML:stop" } do
            -#       = simple_format(shop_order.complete_address + "\n#{shop_order.phone_number}")
            -#   - else
            -#     = simple_format(shop_order.complete_address)
            - if current_user.super_admin?
              %td.m.l.text-center.link{style: 'overflow: hidden;'}
                = link_to 'javascript:;', data: { action: "click->copy#innerHTML:stop" } do
                  = shop_order.email
              %td.text-center.link=shopping_cart.username if shopping_cart.user.present?
              %td.m.l.text-center= shopping_cart.client_ip
              %td.min.text-center
                = form_for shop_order, url: shop_order_path(shop_order), html: { "data-turbo": "false" }, data: { turbo_method: :patch } do |f|
                  .hidden= f.check_box :was_order_paid, checked: !shop_order.was_order_paid
                  = f.button type: 'submit', class:'small square', style:'background: white; color: black;' do
                    %i.material-icons.admin-actions__link__icon= shop_order.was_order_paid ? 'check_box' : 'check_box_outline_blank'
              -# %td.min.text-center
              -#   = form_for shop_order, url: shop_order_path(shop_order), html: { "data-turbo": "false" }, data: { turbo_method: :patch } do |f|
              -#     .hidden= f.check_box :was_order_sent, checked: !shop_order.was_order_sent
              -#     = f.button type: 'submit', class:'small square', style:'background: white; color: black;' do
              -#       %i.material-icons.admin-actions__link__icon= shop_order.was_order_sent ? 'check_box' : 'check_box_outline_blank'
              -# %td.text-center= shop_order.payment_method
            %td.text-center= shop_order.status_text
            - if current_user.super_admin?
              %td.m.l.text-center
                .admin-list-actions.text-right
                  .admin-list-actions__link
                    = button_to shop_order_path(shop_order), method: :delete, form: { data: { turbo_method: :delete, turbo_confirm: t('confirm') } }, class: 'small square', style:'margin: 0 0 0 5px;' do
                      %i.material-icons.admin-actions__link__icon= 'delete'

        - if current_user.super_admin?
          -# Turnover row
          %tr.total-row{style: 'color: blueviolet;'}
            %td= "(Super admin)"
            %td= t('shop_orders.turnover')
            %td= turnover.round(1)
            %td.m.l
            %td.m.l
            %td
            %td.m.l
            %td
            %td
            %td
            %td
            %td.m.l

- else
  .row
    .col.text-center
      = t('shop_orders.no_orders_yet')
  .row
    -# shop button
    .col.text-center
      = link_to shop_path do
        %button.btn.btn-default.btn-with-icon
          %i.material-icons{style: 'font-size: 20px;'} store
          %span= t('shop.title')




- if current_user.super_admin?
  .row{style: 'margin-top: 2rem;'}
    .col
      %h5 Super admin section:
  - sc_ids = @shop_orders.map(&:shopping_cart_id)
  - shopping_carts = ShoppingCart.where.not(id: sc_ids).includes(:user, :shop_purchases, shop_purchases: :shop_product).order(created_at: :desc)
  .row
    .col.middle-align
      %p= t('shopping_cart.total_count') + " = #{shopping_carts.count}"
  .shopping_cart-list{data: { controller: "tables" }, style: 'overflow: auto;'}
    %table.table.border
      %thead.table-header
        %tr
          %th.text-center= t('activerecord.attributes.shopping_cart.created_at')
          %th.text-left= t('shop_products.title')
          %th.text-left= t('shopping_cart.total')
          %th.text-center= t('activerecord.attributes.shopping_cart.user_id')
          %th.m.l.text-center= t('activerecord.attributes.shopping_cart.client_ip')
          %th.text-center= t('activerecord.attributes.shopping_cart.has_checked_out')
          %th.m.l.text-right= t('actions')
      %tbody.shopping_cart-list-body#shopping_carts
        - turnover = 0
        - shopping_carts.each do |shopping_cart|
          %tr
            %td.text-center= shopping_cart.created_at.localtime.to_fs(:custom_datetime)
            %td.text-left
              - shopping_cart.shop_purchases.each do |purchase|
                = "#{purchase.quantity}x #{purchase.shop_product.name}"
                %br
            %td.text-left
              - total_price = shopping_cart.total_price
              = shopping_cart.total_price_text(total_price)
              - turnover = turnover + total_price
            %td.text-center.link= link_to shopping_cart.username, edit_customer_path(shopping_cart.user.customer_id) if shopping_cart.user.present?
            %td.m.l.text-center= shopping_cart.client_ip
            %td.min.text-center
              = button_tag class:'small square', style:'background: white; color: black;', disabled: true do
                %i.material-icons.admin-actions__link__icon= shopping_cart.has_checked_out ? 'check_box' : 'check_box_outline_blank'
            %td.m.l.text-center
              .admin-list-actions.text-right
                .admin-list-actions__link
                  = button_to shop_shopping_cart_path(id: shopping_cart.id), method: :delete, form: { data: { turbo_method: :delete, turbo_confirm: t('confirm') } }, class: 'small square', style:'margin: 0 0 0 5px;' do
                    %i.material-icons.admin-actions__link__icon= 'delete'
